#!/usr/bin/env python3
import argparse
import importlib
import inspect
import pathlib
import sys
import time
import traceback

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-q', '--quiet', action='store_true')
    args = parser.parse_args()

    tests_dir = pathlib.Path('tests')
    start = time.time()
    passed = 0
    failed = 0

    for path in tests_dir.glob('test_*.py'):
        module = importlib.import_module(f'tests.{path.stem}')
        for name, func in inspect.getmembers(module, inspect.isfunction):
            if name.startswith('test_'):
                try:
                    func()
                    passed += 1
                    if not args.quiet:
                        print('.', end='')
                except Exception:
                    failed += 1
                    if args.quiet:
                        print('F', end='')
                    else:
                        print()
                        traceback.print_exc()
    duration = time.time() - start
    if not args.quiet:
        print()
    if failed:
        print(f'{failed+passed} tests collected')
        print(f'{failed} failed, {passed} passed in {duration:.2f}s')
        sys.exit(1)
    else:
        print(f'{passed} passed in {duration:.2f}s')

if __name__ == '__main__':
    main()
